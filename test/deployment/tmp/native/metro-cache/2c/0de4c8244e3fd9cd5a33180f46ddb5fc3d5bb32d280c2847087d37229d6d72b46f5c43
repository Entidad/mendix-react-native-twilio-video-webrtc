{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":69,"column":0}}]}},{"name":"./parseHermesStack","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":25},"end":{"line":16,"column":54}}]}},{"name":"stacktrace-parser","data":{"asyncType":null,"locs":[{"start":{"line":55,"column":27},"end":{"line":55,"column":55}}]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]);function n(t,n){var u=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(u)return(u=u.call(t)).next.bind(u);if(Array.isArray(t)||(u=o(t))||n&&t&&\"number\"==typeof t.length){u&&(t=u);var l=0;return function(){return l>=t.length?{done:!0}:{done:!1,value:t[l++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function o(t,n){if(t){if(\"string\"==typeof t)return u(t,n);var o=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===o&&t.constructor&&(o=t.constructor.name),\"Map\"===o||\"Set\"===o?Array.from(t):\"Arguments\"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?u(t,n):void 0}}function u(t,n){(null==n||n>t.length)&&(n=t.length);for(var o=0,u=new Array(n);o<n;o++)u[o]=t[o];return u}var l=r(d[1]);function c(t){for(var o,u=[],l=n(t.entries);!(o=l()).done;){var c=o.value;if('FRAME'===c.type){var f=c.location,s=c.functionName;'NATIVE'!==f.type&&u.push({methodName:s,file:f.sourceUrl,lineNumber:f.line1Based,column:'SOURCE'===f.type?f.column1Based-1:f.virtualOffset0Based})}}return u}m.exports=function(n){if(null==n)return[];var o=r(d[2]);return Array.isArray(n)?n:g.HermesInternal?c(l(n)):o.parse(n).map(function(n){return t({},n,{column:null!=n.column?n.column-1:null})})}});","lineCount":1,"map":[[1,28,11,0],[1,880,16,0],[1,884,16,6,"parseHermesStack"],[1,886,16,25,"require"],[1,888,16,32,"d"],[1,890,16,32],[1,894,27,0],[1,903,27,9,"convertHermesStack"],[1,905,27,28,"stack"],[1,908,29,2],[1,912,28,2],[1,916,29,2,"_step"],[1,918,28,8,"frames"],[1,923,29,2,"_iterator"],[1,925,29,2,"_createForOfIteratorHelperLoose"],[1,927,29,22,"stack"],[1,929,29,28,"entries"],[1,940,29,2,"_step"],[1,942,29,2,"_iterator"],[1,947,29,2,"done"],[1,953,29,37],[1,954,29,37],[1,958,29,13,"entry"],[1,960,29,37,"_step"],[1,962,29,37,"value"],[1,968,30,4],[1,971,30,23],[1,981,30,8,"entry"],[1,983,30,14,"type"],[1,988,30,4],[1,989,33,4],[1,993,33,11,"location"],[1,995,33,37,"entry"],[1,997,33,11,"location"],[1,1006,33,21,"functionName"],[1,1008,33,37,"entry"],[1,1010,33,21,"functionName"],[1,1023,34,26],[1,1034,34,8,"location"],[1,1036,34,17,"type"],[1,1042,37,4,"frames"],[1,1044,37,11,"push"],[1,1050,38,6,"methodName"],[1,1061,38,18,"functionName"],[1,1063,39,6,"file"],[1,1068,39,12,"location"],[1,1070,39,21,"sourceUrl"],[1,1080,40,6,"lineNumber"],[1,1091,40,18,"location"],[1,1093,40,27,"line1Based"],[1,1104,41,6,"column"],[1,1111,42,26],[1,1122,42,8,"location"],[1,1124,42,17,"type"],[1,1129,43,12,"location"],[1,1131,43,21,"column1Based"],[1,1144,43,36],[1,1146,44,12,"location"],[1,1148,44,21,"virtualOffset0Based"],[1,1171,47,2],[1,1178,47,9,"frames"],[1,1180,68,0,"module"],[1,1182,68,7,"exports"],[1,1190,50,0],[1,1199,50,25,"errorStack"],[1,1202,51,2],[1,1205,51,20],[1,1211,51,6,"errorStack"],[1,1213,52,4],[1,1222,55,2],[1,1226,55,8,"stacktraceParser"],[1,1228,55,27,"require"],[1,1230,55,34,"d"],[1,1232,55,34],[1,1236,65,2],[1,1243,56,22,"Array"],[1,1249,56,28,"isArray"],[1,1257,56,36,"errorStack"],[1,1260,57,6,"errorStack"],[1,1262,58,6,"global"],[1,1264,58,13,"HermesInternal"],[1,1279,59,6,"convertHermesStack"],[1,1281,59,25,"parseHermesStack"],[1,1283,59,42,"errorStack"],[1,1287,60,6,"stacktraceParser"],[1,1289,60,23,"parse"],[1,1295,60,29,"errorStack"],[1,1298,60,41,"map"],[1,1302,60,45],[1,1311,60,45,"frame"],[1,1314,60,50],[1,1321,60,50,"_extends"],[1,1326,61,11,"frame"],[1,1329,62,8,"column"],[1,1336,62,32],[1,1342,62,16,"frame"],[1,1344,62,22,"column"],[1,1351,62,39,"frame"],[1,1353,62,45,"column"],[1,1360,62,54],[1,1362,62,58]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;AC0B;CDqB;AEE;6CCU;QDG;CFG"}},"type":"js/module"}]}